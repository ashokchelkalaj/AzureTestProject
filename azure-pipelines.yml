# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- 'azure-pipelines'

stages:
- stage: 'Build'
  displayName: 'Build the web application'
  jobs:
  - job: 'Build'
    displayName: 'Build job'
    pool:
      vmImage: 'windows-latest'

    variables:
    
      buildPlatform: 'Any CPU'
      buildConfiguration: 'Release'
      solution: '**/RoundTheCode.AzureTestProject.sln'
      project: '**/RoundTheCode.AzureTestProject.csproj'


    steps:
    - task: NuGetToolInstaller@1
      name: 'NuGetToolInstaller'
      displayName: 'NuGet tool installer'


    - task: NuGetCommand@2
      name: 'NuGetRestore'
      displayName: 'NuGet restore packages'
      inputs:
        command: 'restore'
        restoreSolution: '$(solution)'
        feedsToUse: 'select'

    - task: DotNetCoreCLI@2
      name: 'Tests'
      displayName: 'Run tests'
      inputs:
        command: 'test'
        projects: '$(solution)'
        arguments: '--configuration $(BuildConfiguration)'

    - task: DotNetCoreCLI@2
      name: 'Publish'
      displayName: 'Publish'
      inputs:
        command: 'publish'
        publishWebProjects: true
        projects: '$(project)'
        arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: true

    - task: PublishBuildArtifacts@1
      inputs:
       PathtoPublish: '$(Build.ArtifactStagingDirectory)'
       ArtifactName: 'AzureTestProject'
       publishLocation: 'Container'

- stage: DeployWebsite
  displayName: 'Deploy website'
  pool:
      vmImage: windows-latest
    
  jobs:
    - deployment: DeployWebsite
      displayName: 'Deploy website'
      environment: 
        name: window123
        resourceType: VirtualMachine
      strategy:
       runOnce:
           deploy:
            steps:
                - checkout: none

                - download: 'current'
                  name: 'DownloadBuildArtifacts'
                  displayName: 'Download Build Artifacts'
                  artifact: 'AzureTestProject'
                
               
                - task: IISWebAppManagementOnMachineGroup@0
                  inputs:            
                    IISDeploymentType: 'IISWebsite'
                    ActionIISWebsite: 'CreateOrUpdateWebsite'
                    WebsiteName: 'AzureTestProject'
                    WebsitePhysicalPath: '%SystemDrive%\inetpub\wwwroot\Azuretestproject'
                    WebsitePhysicalPathAuth: 'WebsiteUserPassThrough'
                    CreateOrUpdateAppPoolForWebsite: true
                    AppPoolNameForWebsite: 'AzureTestProject'
                    DotNetVersionForWebsite: 'No Managed Code'
                    PipeLineModeForWebsite: 'Integrated'
                    AppPoolIdentityForWebsite: 'ApplicationPoolIdentity'
                    AddBinding: true
                    Bindings: |
                      {
                         bindings:[
                            {
                              "protocol":"http",
                              "ipAddress":"*",
                              "hostname":"",
                              "port":"5050",
                              "sslThumbprint":"",
                              "sniFlag":false
                            }
                         ]
                       }
                - script: echo $(Pipeline.Workspace)\AzureTestProject\RoundTheCode.AzureTestProject

                - task: IISWebAppDeploymentOnMachineGroup@0
                  name: 'DeployIIS'
                  displayName: 'Deploy IIS website'                
                  inputs:
                    
                    WebSiteName: 'AzureTestProject'
                    Package:  C:\azagent\A1\_work\4\**\*.zip
                    TakeAppOfflineFlag: true
                    XmlVariableSubstitution: True
               
                    